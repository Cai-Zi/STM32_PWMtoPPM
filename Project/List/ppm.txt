; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\ppm.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\ppm.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I.\RTE\_TimeCounter -Id:\Keil_v5\MDK\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -Id:\Keil_v5\MDK\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=526 -D_RTE_ -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\ppm.crf ..\User\ppm.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LedInit PROC
;;;27     
;;;28     void LedInit(void)
000000  b508              PUSH     {r3,lr}
;;;29     {
;;;30         // PB0 for LED, PB1 for ouput
;;;31         GPIO_InitTypeDef GPIO_InitStructure;
;;;32         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB|RCC_APB2Periph_GPIOC, ENABLE);
000002  2101              MOVS     r1,#1
000004  2018              MOVS     r0,#0x18
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;33         
;;;34         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
00000a  2002              MOVS     r0,#2
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;35         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000010  2003              MOVS     r0,#3
000012  f88d0002          STRB     r0,[sp,#2]
;;;36         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000016  2010              MOVS     r0,#0x10
000018  f88d0003          STRB     r0,[sp,#3]
;;;37         GPIO_Init(GPIOB, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  48fd              LDR      r0,|L1.1044|
000020  f7fffffe          BL       GPIO_Init
;;;38     	
;;;39     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;
000024  f44f5000          MOV      r0,#0x2000
000028  f8ad0000          STRH     r0,[sp,#0]
;;;40         GPIO_Init(GPIOC, &GPIO_InitStructure);
00002c  4669              MOV      r1,sp
00002e  48fa              LDR      r0,|L1.1048|
000030  f7fffffe          BL       GPIO_Init
;;;41     }
000034  bd08              POP      {r3,pc}
;;;42     
                          ENDP

                  Timer4Init PROC
;;;49     */
;;;50     void Timer4Init(void)
000036  b500              PUSH     {lr}
;;;51     {
000038  b087              SUB      sp,sp,#0x1c
;;;52     	GPIO_InitTypeDef GPIO_InitStructure;
;;;53         TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;54         TIM_ICInitTypeDef  TIM_ICInitStructure;
;;;55         
;;;56     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
00003a  2101              MOVS     r1,#1
00003c  2004              MOVS     r0,#4
00003e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;57         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
000042  2101              MOVS     r1,#1
000044  2008              MOVS     r0,#8
000046  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;58         
;;;59         // TIM3 IC1 PB.6
;;;60         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
00004a  2040              MOVS     r0,#0x40
00004c  f8ad0018          STRH     r0,[sp,#0x18]
;;;61         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000050  2003              MOVS     r0,#3
000052  f88d001a          STRB     r0,[sp,#0x1a]
;;;62         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
000056  2028              MOVS     r0,#0x28
000058  f88d001b          STRB     r0,[sp,#0x1b]
;;;63         GPIO_Init(GPIOB, &GPIO_InitStructure);
00005c  a906              ADD      r1,sp,#0x18
00005e  48ed              LDR      r0,|L1.1044|
000060  f7fffffe          BL       GPIO_Init
;;;64         
;;;65         // TIM3 IC2 PB.7
;;;66         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;
000064  2080              MOVS     r0,#0x80
000066  f8ad0018          STRH     r0,[sp,#0x18]
;;;67         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00006a  2003              MOVS     r0,#3
00006c  f88d001a          STRB     r0,[sp,#0x1a]
;;;68         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
000070  2028              MOVS     r0,#0x28
000072  f88d001b          STRB     r0,[sp,#0x1b]
;;;69         GPIO_Init(GPIOB, &GPIO_InitStructure);
000076  a906              ADD      r1,sp,#0x18
000078  48e6              LDR      r0,|L1.1044|
00007a  f7fffffe          BL       GPIO_Init
;;;70     
;;;71         // TIM3 IC3 PB.8
;;;72         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
00007e  f44f7080          MOV      r0,#0x100
000082  f8ad0018          STRH     r0,[sp,#0x18]
;;;73         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000086  2003              MOVS     r0,#3
000088  f88d001a          STRB     r0,[sp,#0x1a]
;;;74         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
00008c  2028              MOVS     r0,#0x28
00008e  f88d001b          STRB     r0,[sp,#0x1b]
;;;75         GPIO_Init(GPIOB, &GPIO_InitStructure);
000092  a906              ADD      r1,sp,#0x18
000094  48df              LDR      r0,|L1.1044|
000096  f7fffffe          BL       GPIO_Init
;;;76     
;;;77         // TIM3 IC4 PB.9
;;;78         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
00009a  f44f7000          MOV      r0,#0x200
00009e  f8ad0018          STRH     r0,[sp,#0x18]
;;;79         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0000a2  2003              MOVS     r0,#3
0000a4  f88d001a          STRB     r0,[sp,#0x1a]
;;;80         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
0000a8  2028              MOVS     r0,#0x28
0000aa  f88d001b          STRB     r0,[sp,#0x1b]
;;;81         GPIO_Init(GPIOB, &GPIO_InitStructure);
0000ae  a906              ADD      r1,sp,#0x18
0000b0  48d8              LDR      r0,|L1.1044|
0000b2  f7fffffe          BL       GPIO_Init
;;;82     
;;;83         /* TIM4 basic Init */
;;;84     	TIM_TimeBaseStructure.TIM_Period = TIM_COUNTER - 1;
0000b6  f648409f          MOV      r0,#0x8c9f
0000ba  f8ad0010          STRH     r0,[sp,#0x10]
;;;85         TIM_TimeBaseStructure.TIM_Prescaler = TIM_PSC - 1;
0000be  2001              MOVS     r0,#1
0000c0  f8ad000c          STRH     r0,[sp,#0xc]
;;;86         TIM_TimeBaseStructure.TIM_ClockDivision = 0;
0000c4  2000              MOVS     r0,#0
0000c6  f8ad0012          STRH     r0,[sp,#0x12]
;;;87         TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
0000ca  f8ad000e          STRH     r0,[sp,#0xe]
;;;88         TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
0000ce  f88d0014          STRB     r0,[sp,#0x14]
;;;89     
;;;90     	TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
0000d2  a903              ADD      r1,sp,#0xc
0000d4  48d1              LDR      r0,|L1.1052|
0000d6  f7fffffe          BL       TIM_TimeBaseInit
;;;91     
;;;92         /* TIM3 CH1 */
;;;93         TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;
0000da  2000              MOVS     r0,#0
0000dc  f8ad0000          STRH     r0,[sp,#0]
;;;94         TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
0000e0  f8ad0002          STRH     r0,[sp,#2]
;;;95         TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
0000e4  2001              MOVS     r0,#1
0000e6  f8ad0004          STRH     r0,[sp,#4]
;;;96         TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;    
0000ea  2000              MOVS     r0,#0
0000ec  f8ad0006          STRH     r0,[sp,#6]
;;;97         TIM_ICInitStructure.TIM_ICFilter = 0x0; 
0000f0  f8ad0008          STRH     r0,[sp,#8]
;;;98         TIM_ICInit(TIM4, &TIM_ICInitStructure);
0000f4  4669              MOV      r1,sp
0000f6  48c9              LDR      r0,|L1.1052|
0000f8  f7fffffe          BL       TIM_ICInit
;;;99      
;;;100        TIM_ClearFlag(TIM4, TIM_IT_CC1);
0000fc  2102              MOVS     r1,#2
0000fe  48c7              LDR      r0,|L1.1052|
000100  f7fffffe          BL       TIM_ClearFlag
;;;101        TIM_ITConfig(TIM4,TIM_IT_CC1,ENABLE);
000104  2201              MOVS     r2,#1
000106  2102              MOVS     r1,#2
000108  48c4              LDR      r0,|L1.1052|
00010a  f7fffffe          BL       TIM_ITConfig
;;;102        
;;;103        /* TM3 CH2*/
;;;104        TIM_ICInitStructure.TIM_Channel = TIM_Channel_2;
00010e  2004              MOVS     r0,#4
000110  f8ad0000          STRH     r0,[sp,#0]
;;;105        TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
000114  2000              MOVS     r0,#0
000116  f8ad0002          STRH     r0,[sp,#2]
;;;106        TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
00011a  2001              MOVS     r0,#1
00011c  f8ad0004          STRH     r0,[sp,#4]
;;;107        TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;    
000120  2000              MOVS     r0,#0
000122  f8ad0006          STRH     r0,[sp,#6]
;;;108        TIM_ICInitStructure.TIM_ICFilter = 0x0; 
000126  f8ad0008          STRH     r0,[sp,#8]
;;;109        TIM_ICInit(TIM4, &TIM_ICInitStructure);
00012a  4669              MOV      r1,sp
00012c  48bb              LDR      r0,|L1.1052|
00012e  f7fffffe          BL       TIM_ICInit
;;;110     
;;;111        TIM_ClearFlag(TIM4, TIM_IT_CC2);
000132  2104              MOVS     r1,#4
000134  48b9              LDR      r0,|L1.1052|
000136  f7fffffe          BL       TIM_ClearFlag
;;;112        TIM_ITConfig(TIM4,TIM_IT_CC2,ENABLE);
00013a  2201              MOVS     r2,#1
00013c  2104              MOVS     r1,#4
00013e  48b7              LDR      r0,|L1.1052|
000140  f7fffffe          BL       TIM_ITConfig
;;;113    
;;;114        /* TM3 CH3*/
;;;115        TIM_ICInitStructure.TIM_Channel = TIM_Channel_3;
000144  2008              MOVS     r0,#8
000146  f8ad0000          STRH     r0,[sp,#0]
;;;116        TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
00014a  2000              MOVS     r0,#0
00014c  f8ad0002          STRH     r0,[sp,#2]
;;;117        TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
000150  2001              MOVS     r0,#1
000152  f8ad0004          STRH     r0,[sp,#4]
;;;118        TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;    
000156  2000              MOVS     r0,#0
000158  f8ad0006          STRH     r0,[sp,#6]
;;;119        TIM_ICInitStructure.TIM_ICFilter = 0x0; 
00015c  f8ad0008          STRH     r0,[sp,#8]
;;;120        TIM_ICInit(TIM4, &TIM_ICInitStructure);
000160  4669              MOV      r1,sp
000162  48ae              LDR      r0,|L1.1052|
000164  f7fffffe          BL       TIM_ICInit
;;;121     
;;;122        TIM_ClearFlag(TIM4, TIM_IT_CC3);
000168  2108              MOVS     r1,#8
00016a  48ac              LDR      r0,|L1.1052|
00016c  f7fffffe          BL       TIM_ClearFlag
;;;123        TIM_ITConfig(TIM4,TIM_IT_CC3,ENABLE);
000170  2201              MOVS     r2,#1
000172  2108              MOVS     r1,#8
000174  48a9              LDR      r0,|L1.1052|
000176  f7fffffe          BL       TIM_ITConfig
;;;124    
;;;125        /* TM3 CH4*/
;;;126        TIM_ICInitStructure.TIM_Channel = TIM_Channel_4;
00017a  200c              MOVS     r0,#0xc
00017c  f8ad0000          STRH     r0,[sp,#0]
;;;127        TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
000180  2000              MOVS     r0,#0
000182  f8ad0002          STRH     r0,[sp,#2]
;;;128        TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
000186  2001              MOVS     r0,#1
000188  f8ad0004          STRH     r0,[sp,#4]
;;;129        TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;    
00018c  2000              MOVS     r0,#0
00018e  f8ad0006          STRH     r0,[sp,#6]
;;;130        TIM_ICInitStructure.TIM_ICFilter = 0x0; 
000192  f8ad0008          STRH     r0,[sp,#8]
;;;131        TIM_ICInit(TIM4, &TIM_ICInitStructure);
000196  4669              MOV      r1,sp
000198  48a0              LDR      r0,|L1.1052|
00019a  f7fffffe          BL       TIM_ICInit
;;;132     
;;;133        TIM_ClearFlag(TIM4, TIM_IT_CC4);
00019e  2110              MOVS     r1,#0x10
0001a0  489e              LDR      r0,|L1.1052|
0001a2  f7fffffe          BL       TIM_ClearFlag
;;;134        TIM_ITConfig(TIM4,TIM_IT_CC4,ENABLE);
0001a6  2201              MOVS     r2,#1
0001a8  2110              MOVS     r1,#0x10
0001aa  489c              LDR      r0,|L1.1052|
0001ac  f7fffffe          BL       TIM_ITConfig
;;;135    	
;;;136    	TIM_ITConfig(TIM4,TIM_IT_Update,ENABLE);
0001b0  2201              MOVS     r2,#1
0001b2  4611              MOV      r1,r2
0001b4  4899              LDR      r0,|L1.1052|
0001b6  f7fffffe          BL       TIM_ITConfig
;;;137    	TIM_Cmd(TIM4, ENABLE);
0001ba  2101              MOVS     r1,#1
0001bc  4897              LDR      r0,|L1.1052|
0001be  f7fffffe          BL       TIM_Cmd
;;;138    }
0001c2  b007              ADD      sp,sp,#0x1c
0001c4  bd00              POP      {pc}
;;;139    
                          ENDP

                  Timer2Init PROC
;;;146    */
;;;147    void Timer2Init(void)
0001c6  b500              PUSH     {lr}
;;;148    {
0001c8  b087              SUB      sp,sp,#0x1c
;;;149    	GPIO_InitTypeDef GPIO_InitStructure;
;;;150        TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;151        TIM_ICInitTypeDef  TIM_ICInitStructure;
;;;152        
;;;153    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
0001ca  2101              MOVS     r1,#1
0001cc  4608              MOV      r0,r1
0001ce  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;154        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
0001d2  2101              MOVS     r1,#1
0001d4  2004              MOVS     r0,#4
0001d6  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;155        
;;;156        // TIM2 IC1 PA.0
;;;157        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
0001da  2001              MOVS     r0,#1
0001dc  f8ad0018          STRH     r0,[sp,#0x18]
;;;158        GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0001e0  2003              MOVS     r0,#3
0001e2  f88d001a          STRB     r0,[sp,#0x1a]
;;;159        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
0001e6  2028              MOVS     r0,#0x28
0001e8  f88d001b          STRB     r0,[sp,#0x1b]
;;;160        GPIO_Init(GPIOA, &GPIO_InitStructure);
0001ec  a906              ADD      r1,sp,#0x18
0001ee  488c              LDR      r0,|L1.1056|
0001f0  f7fffffe          BL       GPIO_Init
;;;161        
;;;162        // TIM2 IC2 PA.1
;;;163        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
0001f4  2002              MOVS     r0,#2
0001f6  f8ad0018          STRH     r0,[sp,#0x18]
;;;164        GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0001fa  2003              MOVS     r0,#3
0001fc  f88d001a          STRB     r0,[sp,#0x1a]
;;;165        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
000200  2028              MOVS     r0,#0x28
000202  f88d001b          STRB     r0,[sp,#0x1b]
;;;166        GPIO_Init(GPIOA, &GPIO_InitStructure);
000206  a906              ADD      r1,sp,#0x18
000208  4885              LDR      r0,|L1.1056|
00020a  f7fffffe          BL       GPIO_Init
;;;167    
;;;168        // TIM2 IC3 PA.2
;;;169        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
00020e  2004              MOVS     r0,#4
000210  f8ad0018          STRH     r0,[sp,#0x18]
;;;170        GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000214  2003              MOVS     r0,#3
000216  f88d001a          STRB     r0,[sp,#0x1a]
;;;171        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
00021a  2028              MOVS     r0,#0x28
00021c  f88d001b          STRB     r0,[sp,#0x1b]
;;;172        GPIO_Init(GPIOA, &GPIO_InitStructure);
000220  a906              ADD      r1,sp,#0x18
000222  487f              LDR      r0,|L1.1056|
000224  f7fffffe          BL       GPIO_Init
;;;173    
;;;174        // TIM2 IC4 PA.3
;;;175        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
000228  2008              MOVS     r0,#8
00022a  f8ad0018          STRH     r0,[sp,#0x18]
;;;176        GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00022e  2003              MOVS     r0,#3
000230  f88d001a          STRB     r0,[sp,#0x1a]
;;;177        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
000234  2028              MOVS     r0,#0x28
000236  f88d001b          STRB     r0,[sp,#0x1b]
;;;178        GPIO_Init(GPIOA, &GPIO_InitStructure);
00023a  a906              ADD      r1,sp,#0x18
00023c  4878              LDR      r0,|L1.1056|
00023e  f7fffffe          BL       GPIO_Init
;;;179    
;;;180    	/* TIM2 basic init */
;;;181    	TIM_TimeBaseStructure.TIM_Period = TIM_COUNTER - 1;
000242  f648409f          MOV      r0,#0x8c9f
000246  f8ad0010          STRH     r0,[sp,#0x10]
;;;182    	TIM_TimeBaseStructure.TIM_Prescaler = TIM_PSC - 1;		 
00024a  2001              MOVS     r0,#1
00024c  f8ad000c          STRH     r0,[sp,#0xc]
;;;183    	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
000250  2000              MOVS     r0,#0
000252  f8ad0012          STRH     r0,[sp,#0x12]
;;;184    	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
000256  f8ad000e          STRH     r0,[sp,#0xe]
;;;185    	TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
00025a  f88d0014          STRB     r0,[sp,#0x14]
;;;186        
;;;187    	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
00025e  a903              ADD      r1,sp,#0xc
000260  f04f4080          MOV      r0,#0x40000000
000264  f7fffffe          BL       TIM_TimeBaseInit
;;;188    
;;;189        /* TIM2 CH1 */
;;;190        TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;
000268  2000              MOVS     r0,#0
00026a  f8ad0000          STRH     r0,[sp,#0]
;;;191        TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
00026e  f8ad0002          STRH     r0,[sp,#2]
;;;192        TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
000272  2001              MOVS     r0,#1
000274  f8ad0004          STRH     r0,[sp,#4]
;;;193        TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;    
000278  2000              MOVS     r0,#0
00027a  f8ad0006          STRH     r0,[sp,#6]
;;;194        TIM_ICInitStructure.TIM_ICFilter = 0x0; 
00027e  f8ad0008          STRH     r0,[sp,#8]
;;;195        TIM_ICInit(TIM2, &TIM_ICInitStructure);
000282  4669              MOV      r1,sp
000284  f04f4080          MOV      r0,#0x40000000
000288  f7fffffe          BL       TIM_ICInit
;;;196     
;;;197        TIM_ClearFlag(TIM2, TIM_IT_CC1);
00028c  2102              MOVS     r1,#2
00028e  0748              LSLS     r0,r1,#29
000290  f7fffffe          BL       TIM_ClearFlag
;;;198        TIM_ITConfig(TIM2, TIM_IT_CC1,ENABLE);
000294  2201              MOVS     r2,#1
000296  2102              MOVS     r1,#2
000298  0748              LSLS     r0,r1,#29
00029a  f7fffffe          BL       TIM_ITConfig
;;;199        
;;;200        /* TM2 CH2*/
;;;201        TIM_ICInitStructure.TIM_Channel = TIM_Channel_2;
00029e  2004              MOVS     r0,#4
0002a0  f8ad0000          STRH     r0,[sp,#0]
;;;202        TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
0002a4  2000              MOVS     r0,#0
0002a6  f8ad0002          STRH     r0,[sp,#2]
;;;203        TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
0002aa  2001              MOVS     r0,#1
0002ac  f8ad0004          STRH     r0,[sp,#4]
;;;204        TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;    
0002b0  2000              MOVS     r0,#0
0002b2  f8ad0006          STRH     r0,[sp,#6]
;;;205        TIM_ICInitStructure.TIM_ICFilter = 0x0; 
0002b6  f8ad0008          STRH     r0,[sp,#8]
;;;206        TIM_ICInit(TIM2, &TIM_ICInitStructure);
0002ba  4669              MOV      r1,sp
0002bc  f04f4080          MOV      r0,#0x40000000
0002c0  f7fffffe          BL       TIM_ICInit
;;;207     
;;;208        TIM_ClearFlag(TIM2, TIM_IT_CC2);
0002c4  2104              MOVS     r1,#4
0002c6  0708              LSLS     r0,r1,#28
0002c8  f7fffffe          BL       TIM_ClearFlag
;;;209        TIM_ITConfig(TIM2, TIM_IT_CC2,ENABLE);
0002cc  2201              MOVS     r2,#1
0002ce  2104              MOVS     r1,#4
0002d0  0708              LSLS     r0,r1,#28
0002d2  f7fffffe          BL       TIM_ITConfig
;;;210    
;;;211        /* TM2 CH3*/
;;;212        TIM_ICInitStructure.TIM_Channel = TIM_Channel_3;
0002d6  2008              MOVS     r0,#8
0002d8  f8ad0000          STRH     r0,[sp,#0]
;;;213        TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
0002dc  2000              MOVS     r0,#0
0002de  f8ad0002          STRH     r0,[sp,#2]
;;;214        TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
0002e2  2001              MOVS     r0,#1
0002e4  f8ad0004          STRH     r0,[sp,#4]
;;;215        TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;    
0002e8  2000              MOVS     r0,#0
0002ea  f8ad0006          STRH     r0,[sp,#6]
;;;216        TIM_ICInitStructure.TIM_ICFilter = 0x0; 
0002ee  f8ad0008          STRH     r0,[sp,#8]
;;;217        TIM_ICInit(TIM2, &TIM_ICInitStructure);
0002f2  4669              MOV      r1,sp
0002f4  f04f4080          MOV      r0,#0x40000000
0002f8  f7fffffe          BL       TIM_ICInit
;;;218     
;;;219        TIM_ClearFlag(TIM2, TIM_IT_CC3);
0002fc  2108              MOVS     r1,#8
0002fe  06c8              LSLS     r0,r1,#27
000300  f7fffffe          BL       TIM_ClearFlag
;;;220        TIM_ITConfig(TIM2, TIM_IT_CC3,ENABLE);
000304  2201              MOVS     r2,#1
000306  2108              MOVS     r1,#8
000308  06c8              LSLS     r0,r1,#27
00030a  f7fffffe          BL       TIM_ITConfig
;;;221    
;;;222        /* TM2 CH4*/
;;;223        TIM_ICInitStructure.TIM_Channel = TIM_Channel_4;
00030e  200c              MOVS     r0,#0xc
000310  f8ad0000          STRH     r0,[sp,#0]
;;;224        TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
000314  2000              MOVS     r0,#0
000316  f8ad0002          STRH     r0,[sp,#2]
;;;225        TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
00031a  2001              MOVS     r0,#1
00031c  f8ad0004          STRH     r0,[sp,#4]
;;;226        TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;    
000320  2000              MOVS     r0,#0
000322  f8ad0006          STRH     r0,[sp,#6]
;;;227        TIM_ICInitStructure.TIM_ICFilter = 0x0; 
000326  f8ad0008          STRH     r0,[sp,#8]
;;;228        TIM_ICInit(TIM2, &TIM_ICInitStructure);
00032a  4669              MOV      r1,sp
00032c  f04f4080          MOV      r0,#0x40000000
000330  f7fffffe          BL       TIM_ICInit
;;;229     
;;;230        TIM_ClearFlag(TIM2, TIM_IT_CC4);
000334  2110              MOVS     r1,#0x10
000336  0688              LSLS     r0,r1,#26
000338  f7fffffe          BL       TIM_ClearFlag
;;;231        TIM_ITConfig(TIM2, TIM_IT_CC4,ENABLE);
00033c  2201              MOVS     r2,#1
00033e  2110              MOVS     r1,#0x10
000340  0688              LSLS     r0,r1,#26
000342  f7fffffe          BL       TIM_ITConfig
;;;232    	
;;;233    	TIM_ITConfig(TIM2, TIM_IT_Update,ENABLE);
000346  2201              MOVS     r2,#1
000348  4611              MOV      r1,r2
00034a  0790              LSLS     r0,r2,#30
00034c  f7fffffe          BL       TIM_ITConfig
;;;234    	TIM_Cmd(TIM2, ENABLE);
000350  2101              MOVS     r1,#1
000352  0788              LSLS     r0,r1,#30
000354  f7fffffe          BL       TIM_Cmd
;;;235    }
000358  b007              ADD      sp,sp,#0x1c
00035a  bd00              POP      {pc}
;;;236    
                          ENDP

                  Timer2_IRQ PROC
;;;237    
;;;238    void Timer2_IRQ(void)
00035c  b510              PUSH     {r4,lr}
;;;239    {
;;;240        static uint32_t cnt = 0; 
;;;241        
;;;242        if (TIM_GetITStatus(TIM2, TIM_IT_Update) != RESET) {
00035e  2101              MOVS     r1,#1
000360  0788              LSLS     r0,r1,#30
000362  f7fffffe          BL       TIM_GetITStatus
000366  b148              CBZ      r0,|L1.892|
;;;243            TIM_ClearITPendingBit(TIM2, TIM_IT_Update);
000368  2101              MOVS     r1,#1
00036a  0788              LSLS     r0,r1,#30
00036c  f7fffffe          BL       TIM_ClearITPendingBit
;;;244            cnt++;
000370  482c              LDR      r0,|L1.1060|
000372  6800              LDR      r0,[r0,#0]  ; cnt
000374  1c40              ADDS     r0,r0,#1
000376  492b              LDR      r1,|L1.1060|
000378  6008              STR      r0,[r1,#0]  ; cnt
                  |L1.890|
;;;245            return;
;;;246        }
;;;247        // CH1 PA0 PPM_CH1 
;;;248        if (TIM_GetITStatus(TIM2, TIM_IT_CC1) != RESET) {  
;;;249            /* Clear TIM2_CH1 Capture compare interrupt pending bit */  
;;;250            TIM_ClearITPendingBit(TIM2, TIM_IT_CC1);  
;;;251            
;;;252            if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_0) == SET) {
;;;253                start[RC_CH1] = TIM_GetCapture1(TIM2);
;;;254                GPIO_SetBits(GPIOB, GPIO_Pin_0);
;;;255                
;;;256                TIM_OC1PolarityConfig(TIM2,TIM_ICPolarity_Falling);
;;;257                
;;;258                ch_cnt[RC_CH1] = cnt;
;;;259                return;
;;;260            } else {
;;;261                end[RC_CH1] = TIM_GetCapture1(TIM2);
;;;262                       
;;;263                interval[RC_CH1] = (cnt - ch_cnt[RC_CH1]) * TIM_COUNTER + end[RC_CH1] - start[RC_CH1];
;;;264    
;;;265                // limit the scale to 2sec.
;;;266                if (interval[RC_CH1] > 72000)
;;;267                    interval[RC_CH1] = 72000;
;;;268                
;;;269                GPIO_ResetBits(GPIOB, GPIO_Pin_0);
;;;270                TIM_OC1PolarityConfig(TIM2, TIM_ICPolarity_Rising); 
;;;271                return;
;;;272            }
;;;273        }
;;;274        
;;;275        // CH2 PA1 PPM_CH2
;;;276        if (TIM_GetITStatus(TIM2, TIM_IT_CC2) != RESET) {  
;;;277            /* Clear TIM2_CH2 Capture compare interrupt pending bit */  
;;;278            TIM_ClearITPendingBit(TIM2, TIM_IT_CC2);  
;;;279            
;;;280            if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_1) == SET) {
;;;281                start[RC_CH2] = TIM_GetCapture2(TIM2);
;;;282                
;;;283                TIM_OC2PolarityConfig(TIM2,TIM_ICPolarity_Falling);
;;;284                ch_cnt[RC_CH2] = cnt;
;;;285                return;
;;;286            } else {
;;;287                end[RC_CH2] = TIM_GetCapture2(TIM2);
;;;288                       
;;;289                interval[RC_CH2] = (cnt - ch_cnt[RC_CH2]) * TIM_COUNTER + end[RC_CH2] - start[RC_CH2];
;;;290                // limit the scale within 2 secs.
;;;291                if (interval[RC_CH2] > 72000)
;;;292                    interval[RC_CH2] = 72000;
;;;293    
;;;294                TIM_OC2PolarityConfig(TIM2,TIM_ICPolarity_Rising); 
;;;295                return;
;;;296            }
;;;297        }  
;;;298        
;;;299        // CH3 PA2 PPM_CH3 
;;;300        if (TIM_GetITStatus(TIM2, TIM_IT_CC3) != RESET) {  
;;;301            /* Clear TIM2_CH3 Capture compare interrupt pending bit */  
;;;302            TIM_ClearITPendingBit(TIM2, TIM_IT_CC3);  
;;;303            
;;;304            if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_2) == SET) {
;;;305                start[RC_CH3] = TIM_GetCapture3(TIM2);
;;;306                
;;;307                TIM_OC3PolarityConfig(TIM2,TIM_ICPolarity_Falling);
;;;308                ch_cnt[RC_CH3] = cnt;
;;;309                return;
;;;310            } else {
;;;311                end[RC_CH3] = TIM_GetCapture3(TIM2);
;;;312                       
;;;313                interval[RC_CH3] = (cnt - ch_cnt[RC_CH3]) * TIM_COUNTER + end[RC_CH3] - start[RC_CH3];
;;;314                // limit the scale within 2 secs.
;;;315                if (interval[RC_CH3] > 72000)
;;;316                    interval[RC_CH3] = 72000;
;;;317    
;;;318                TIM_OC3PolarityConfig(TIM2,TIM_ICPolarity_Rising); 
;;;319                return;
;;;320            }
;;;321        }  
;;;322        
;;;323        // CH4 PA3 PPM_CH4 
;;;324        if (TIM_GetITStatus(TIM2, TIM_IT_CC4) != RESET) {  
;;;325            /* Clear TIM2_CH4 Capture compare interrupt pending bit */  
;;;326            TIM_ClearITPendingBit(TIM2, TIM_IT_CC4);  
;;;327            
;;;328            if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_3) == SET) {
;;;329                start[RC_CH4] = TIM_GetCapture4(TIM2);
;;;330                
;;;331                TIM_OC4PolarityConfig(TIM2,TIM_ICPolarity_Falling);
;;;332                ch_cnt[RC_CH4] = cnt;
;;;333                return;
;;;334            } else {
;;;335                end[RC_CH4] = TIM_GetCapture4(TIM2);
;;;336                       
;;;337                interval[RC_CH4] = (cnt - ch_cnt[RC_CH4]) * TIM_COUNTER + end[RC_CH4] - start[RC_CH4];
;;;338                // limit the scale within 2 secs.
;;;339                if (interval[RC_CH4] > 72000)
;;;340                    interval[RC_CH4] = 72000;
;;;341    
;;;342                TIM_OC4PolarityConfig(TIM2,TIM_ICPolarity_Rising); 
;;;343                return;
;;;344            }
;;;345        }
;;;346    }
00037a  bd10              POP      {r4,pc}
                  |L1.892|
00037c  2102              MOVS     r1,#2                 ;248
00037e  0748              LSLS     r0,r1,#29             ;248
000380  f7fffffe          BL       TIM_GetITStatus
000384  2800              CMP      r0,#0                 ;248
000386  d057              BEQ      |L1.1080|
000388  2102              MOVS     r1,#2                 ;250
00038a  0748              LSLS     r0,r1,#29             ;250
00038c  f7fffffe          BL       TIM_ClearITPendingBit
000390  2101              MOVS     r1,#1                 ;252
000392  4823              LDR      r0,|L1.1056|
000394  f7fffffe          BL       GPIO_ReadInputDataBit
000398  2801              CMP      r0,#1                 ;252
00039a  d111              BNE      |L1.960|
00039c  0780              LSLS     r0,r0,#30             ;253
00039e  f7fffffe          BL       TIM_GetCapture1
0003a2  4921              LDR      r1,|L1.1064|
0003a4  6008              STR      r0,[r1,#0]            ;253  ; start
0003a6  2101              MOVS     r1,#1                 ;254
0003a8  481a              LDR      r0,|L1.1044|
0003aa  f7fffffe          BL       GPIO_SetBits
0003ae  2102              MOVS     r1,#2                 ;256
0003b0  0748              LSLS     r0,r1,#29             ;256
0003b2  f7fffffe          BL       TIM_OC1PolarityConfig
0003b6  481b              LDR      r0,|L1.1060|
0003b8  6800              LDR      r0,[r0,#0]            ;258  ; cnt
0003ba  491c              LDR      r1,|L1.1068|
0003bc  6008              STR      r0,[r1,#0]            ;258  ; ch_cnt
0003be  e7dc              B        |L1.890|
                  |L1.960|
0003c0  f04f4080          MOV      r0,#0x40000000        ;261
0003c4  f7fffffe          BL       TIM_GetCapture1
0003c8  4919              LDR      r1,|L1.1072|
0003ca  6008              STR      r0,[r1,#0]            ;261  ; end
0003cc  4608              MOV      r0,r1                 ;263
0003ce  6801              LDR      r1,[r0,#0]            ;263  ; end
0003d0  4816              LDR      r0,|L1.1068|
0003d2  6800              LDR      r0,[r0,#0]            ;263  ; ch_cnt
0003d4  4a13              LDR      r2,|L1.1060|
0003d6  6812              LDR      r2,[r2,#0]            ;263  ; cnt
0003d8  1a10              SUBS     r0,r2,r0              ;263
0003da  f2404265          MOV      r2,#0x465             ;263
0003de  4350              MULS     r0,r2,r0              ;263
0003e0  eb011040          ADD      r0,r1,r0,LSL #5       ;263
0003e4  4910              LDR      r1,|L1.1064|
0003e6  6809              LDR      r1,[r1,#0]            ;263  ; start
0003e8  1a40              SUBS     r0,r0,r1              ;263
0003ea  4912              LDR      r1,|L1.1076|
0003ec  6008              STR      r0,[r1,#0]            ;263  ; interval
0003ee  4608              MOV      r0,r1                 ;266
0003f0  6800              LDR      r0,[r0,#0]            ;266  ; interval
0003f2  0191              LSLS     r1,r2,#6              ;266
0003f4  4288              CMP      r0,r1                 ;266
0003f6  d902              BLS      |L1.1022|
0003f8  4608              MOV      r0,r1                 ;267
0003fa  490e              LDR      r1,|L1.1076|
0003fc  6008              STR      r0,[r1,#0]            ;267  ; interval
                  |L1.1022|
0003fe  2101              MOVS     r1,#1                 ;269
000400  4804              LDR      r0,|L1.1044|
000402  f7fffffe          BL       GPIO_ResetBits
000406  2100              MOVS     r1,#0                 ;270
000408  f04f4080          MOV      r0,#0x40000000        ;270
00040c  f7fffffe          BL       TIM_OC1PolarityConfig
000410  e7b3              B        |L1.890|
000412  0000              DCW      0x0000
                  |L1.1044|
                          DCD      0x40010c00
                  |L1.1048|
                          DCD      0x40011000
                  |L1.1052|
                          DCD      0x40000800
                  |L1.1056|
                          DCD      0x40010800
                  |L1.1060|
                          DCD      ||cnt||
                  |L1.1064|
                          DCD      start
                  |L1.1068|
                          DCD      ch_cnt
                  |L1.1072|
                          DCD      end
                  |L1.1076|
                          DCD      interval
                  |L1.1080|
000438  2104              MOVS     r1,#4                 ;276
00043a  0708              LSLS     r0,r1,#28             ;276
00043c  f7fffffe          BL       TIM_GetITStatus
000440  b3e0              CBZ      r0,|L1.1212|
000442  2104              MOVS     r1,#4                 ;278
000444  0708              LSLS     r0,r1,#28             ;278
000446  f7fffffe          BL       TIM_ClearITPendingBit
00044a  2102              MOVS     r1,#2                 ;280
00044c  48fa              LDR      r0,|L1.2104|
00044e  f7fffffe          BL       GPIO_ReadInputDataBit
000452  2801              CMP      r0,#1                 ;280
000454  d10d              BNE      |L1.1138|
000456  0780              LSLS     r0,r0,#30             ;281
000458  f7fffffe          BL       TIM_GetCapture2
00045c  49f7              LDR      r1,|L1.2108|
00045e  6048              STR      r0,[r1,#4]            ;281  ; start
000460  2102              MOVS     r1,#2                 ;283
000462  0748              LSLS     r0,r1,#29             ;283
000464  f7fffffe          BL       TIM_OC2PolarityConfig
000468  48f5              LDR      r0,|L1.2112|
00046a  6800              LDR      r0,[r0,#0]            ;284  ; cnt
00046c  49f5              LDR      r1,|L1.2116|
00046e  6048              STR      r0,[r1,#4]            ;284  ; ch_cnt
000470  e783              B        |L1.890|
                  |L1.1138|
000472  f04f4080          MOV      r0,#0x40000000        ;287
000476  f7fffffe          BL       TIM_GetCapture2
00047a  49f3              LDR      r1,|L1.2120|
00047c  6048              STR      r0,[r1,#4]            ;287  ; end
00047e  4608              MOV      r0,r1                 ;289
000480  6841              LDR      r1,[r0,#4]            ;289  ; end
000482  48f0              LDR      r0,|L1.2116|
000484  6840              LDR      r0,[r0,#4]            ;289  ; ch_cnt
000486  4aee              LDR      r2,|L1.2112|
000488  6812              LDR      r2,[r2,#0]            ;289  ; cnt
00048a  1a10              SUBS     r0,r2,r0              ;289
00048c  f2404265          MOV      r2,#0x465             ;289
000490  4350              MULS     r0,r2,r0              ;289
000492  eb011040          ADD      r0,r1,r0,LSL #5       ;289
000496  49e9              LDR      r1,|L1.2108|
000498  6849              LDR      r1,[r1,#4]            ;289  ; start
00049a  1a40              SUBS     r0,r0,r1              ;289
00049c  49eb              LDR      r1,|L1.2124|
00049e  6048              STR      r0,[r1,#4]            ;289  ; interval
0004a0  4608              MOV      r0,r1                 ;291
0004a2  6840              LDR      r0,[r0,#4]            ;291  ; interval
0004a4  0191              LSLS     r1,r2,#6              ;291
0004a6  4288              CMP      r0,r1                 ;291
0004a8  d902              BLS      |L1.1200|
0004aa  4608              MOV      r0,r1                 ;292
0004ac  49e7              LDR      r1,|L1.2124|
0004ae  6048              STR      r0,[r1,#4]            ;292  ; interval
                  |L1.1200|
0004b0  2100              MOVS     r1,#0                 ;294
0004b2  f04f4080          MOV      r0,#0x40000000        ;294
0004b6  f7fffffe          BL       TIM_OC2PolarityConfig
0004ba  e75e              B        |L1.890|
                  |L1.1212|
0004bc  e7ff              B        |L1.1214|
                  |L1.1214|
0004be  2108              MOVS     r1,#8                 ;300
0004c0  06c8              LSLS     r0,r1,#27             ;300
0004c2  f7fffffe          BL       TIM_GetITStatus
0004c6  b3e0              CBZ      r0,|L1.1346|
0004c8  2108              MOVS     r1,#8                 ;302
0004ca  06c8              LSLS     r0,r1,#27             ;302
0004cc  f7fffffe          BL       TIM_ClearITPendingBit
0004d0  2104              MOVS     r1,#4                 ;304
0004d2  48d9              LDR      r0,|L1.2104|
0004d4  f7fffffe          BL       GPIO_ReadInputDataBit
0004d8  2801              CMP      r0,#1                 ;304
0004da  d10d              BNE      |L1.1272|
0004dc  0780              LSLS     r0,r0,#30             ;305
0004de  f7fffffe          BL       TIM_GetCapture3
0004e2  49d6              LDR      r1,|L1.2108|
0004e4  6088              STR      r0,[r1,#8]            ;305  ; start
0004e6  2102              MOVS     r1,#2                 ;307
0004e8  0748              LSLS     r0,r1,#29             ;307
0004ea  f7fffffe          BL       TIM_OC3PolarityConfig
0004ee  48d4              LDR      r0,|L1.2112|
0004f0  6800              LDR      r0,[r0,#0]            ;308  ; cnt
0004f2  49d4              LDR      r1,|L1.2116|
0004f4  6088              STR      r0,[r1,#8]            ;308  ; ch_cnt
0004f6  e740              B        |L1.890|
                  |L1.1272|
0004f8  f04f4080          MOV      r0,#0x40000000        ;311
0004fc  f7fffffe          BL       TIM_GetCapture3
000500  49d1              LDR      r1,|L1.2120|
000502  6088              STR      r0,[r1,#8]            ;311  ; end
000504  4608              MOV      r0,r1                 ;313
000506  6881              LDR      r1,[r0,#8]            ;313  ; end
000508  48ce              LDR      r0,|L1.2116|
00050a  6880              LDR      r0,[r0,#8]            ;313  ; ch_cnt
00050c  4acc              LDR      r2,|L1.2112|
00050e  6812              LDR      r2,[r2,#0]            ;313  ; cnt
000510  1a10              SUBS     r0,r2,r0              ;313
000512  f2404265          MOV      r2,#0x465             ;313
000516  4350              MULS     r0,r2,r0              ;313
000518  eb011040          ADD      r0,r1,r0,LSL #5       ;313
00051c  49c7              LDR      r1,|L1.2108|
00051e  6889              LDR      r1,[r1,#8]            ;313  ; start
000520  1a40              SUBS     r0,r0,r1              ;313
000522  49ca              LDR      r1,|L1.2124|
000524  6088              STR      r0,[r1,#8]            ;313  ; interval
000526  4608              MOV      r0,r1                 ;315
000528  6880              LDR      r0,[r0,#8]            ;315  ; interval
00052a  0191              LSLS     r1,r2,#6              ;315
00052c  4288              CMP      r0,r1                 ;315
00052e  d902              BLS      |L1.1334|
000530  4608              MOV      r0,r1                 ;316
000532  49c6              LDR      r1,|L1.2124|
000534  6088              STR      r0,[r1,#8]            ;316  ; interval
                  |L1.1334|
000536  2100              MOVS     r1,#0                 ;318
000538  f04f4080          MOV      r0,#0x40000000        ;318
00053c  f7fffffe          BL       TIM_OC3PolarityConfig
000540  e71b              B        |L1.890|
                  |L1.1346|
000542  e7ff              B        |L1.1348|
                  |L1.1348|
000544  2110              MOVS     r1,#0x10              ;324
000546  0688              LSLS     r0,r1,#26             ;324
000548  f7fffffe          BL       TIM_GetITStatus
00054c  b3e0              CBZ      r0,|L1.1480|
00054e  2110              MOVS     r1,#0x10              ;326
000550  0688              LSLS     r0,r1,#26             ;326
000552  f7fffffe          BL       TIM_ClearITPendingBit
000556  2108              MOVS     r1,#8                 ;328
000558  48b7              LDR      r0,|L1.2104|
00055a  f7fffffe          BL       GPIO_ReadInputDataBit
00055e  2801              CMP      r0,#1                 ;328
000560  d10d              BNE      |L1.1406|
000562  0780              LSLS     r0,r0,#30             ;329
000564  f7fffffe          BL       TIM_GetCapture4
000568  49b4              LDR      r1,|L1.2108|
00056a  60c8              STR      r0,[r1,#0xc]          ;329  ; start
00056c  2102              MOVS     r1,#2                 ;331
00056e  0748              LSLS     r0,r1,#29             ;331
000570  f7fffffe          BL       TIM_OC4PolarityConfig
000574  48b2              LDR      r0,|L1.2112|
000576  6800              LDR      r0,[r0,#0]            ;332  ; cnt
000578  49b2              LDR      r1,|L1.2116|
00057a  60c8              STR      r0,[r1,#0xc]          ;332  ; ch_cnt
00057c  e6fd              B        |L1.890|
                  |L1.1406|
00057e  f04f4080          MOV      r0,#0x40000000        ;335
000582  f7fffffe          BL       TIM_GetCapture4
000586  49b0              LDR      r1,|L1.2120|
000588  60c8              STR      r0,[r1,#0xc]          ;335  ; end
00058a  4608              MOV      r0,r1                 ;337
00058c  68c1              LDR      r1,[r0,#0xc]          ;337  ; end
00058e  48ad              LDR      r0,|L1.2116|
000590  68c0              LDR      r0,[r0,#0xc]          ;337  ; ch_cnt
000592  4aab              LDR      r2,|L1.2112|
000594  6812              LDR      r2,[r2,#0]            ;337  ; cnt
000596  1a10              SUBS     r0,r2,r0              ;337
000598  f2404265          MOV      r2,#0x465             ;337
00059c  4350              MULS     r0,r2,r0              ;337
00059e  eb011040          ADD      r0,r1,r0,LSL #5       ;337
0005a2  49a6              LDR      r1,|L1.2108|
0005a4  68c9              LDR      r1,[r1,#0xc]          ;337  ; start
0005a6  1a40              SUBS     r0,r0,r1              ;337
0005a8  49a8              LDR      r1,|L1.2124|
0005aa  60c8              STR      r0,[r1,#0xc]          ;337  ; interval
0005ac  4608              MOV      r0,r1                 ;339
0005ae  68c0              LDR      r0,[r0,#0xc]          ;339  ; interval
0005b0  0191              LSLS     r1,r2,#6              ;339
0005b2  4288              CMP      r0,r1                 ;339
0005b4  d902              BLS      |L1.1468|
0005b6  4608              MOV      r0,r1                 ;340
0005b8  49a4              LDR      r1,|L1.2124|
0005ba  60c8              STR      r0,[r1,#0xc]          ;340  ; interval
                  |L1.1468|
0005bc  2100              MOVS     r1,#0                 ;342
0005be  f04f4080          MOV      r0,#0x40000000        ;342
0005c2  f7fffffe          BL       TIM_OC4PolarityConfig
0005c6  e6d8              B        |L1.890|
                  |L1.1480|
0005c8  e7ff              B        |L1.1482|
                  |L1.1482|
0005ca  bf00              NOP      
0005cc  e6d5              B        |L1.890|
;;;347    
                          ENDP

                  Timer4_IRQ PROC
;;;348    void Timer4_IRQ(void)
0005ce  b510              PUSH     {r4,lr}
;;;349    {
;;;350        static uint32_t cnt = 0; 
;;;351        
;;;352        if (TIM_GetITStatus(TIM4, TIM_IT_Update) != RESET) {
0005d0  2101              MOVS     r1,#1
0005d2  489f              LDR      r0,|L1.2128|
0005d4  f7fffffe          BL       TIM_GetITStatus
0005d8  b148              CBZ      r0,|L1.1518|
;;;353            TIM_ClearITPendingBit(TIM4, TIM_IT_Update);
0005da  2101              MOVS     r1,#1
0005dc  489c              LDR      r0,|L1.2128|
0005de  f7fffffe          BL       TIM_ClearITPendingBit
;;;354            cnt++;
0005e2  489c              LDR      r0,|L1.2132|
0005e4  6800              LDR      r0,[r0,#0]  ; cnt
0005e6  1c40              ADDS     r0,r0,#1
0005e8  499a              LDR      r1,|L1.2132|
0005ea  6008              STR      r0,[r1,#0]  ; cnt
                  |L1.1516|
;;;355            return;
;;;356        }   
;;;357        // CH1 PB6 RC_CH5
;;;358        if (TIM_GetITStatus(TIM4, TIM_IT_CC1) != RESET) {  
;;;359            /* Clear TIM2_CH5 Capture compare interrupt pending bit */  
;;;360            TIM_ClearITPendingBit(TIM4, TIM_IT_CC1);  
;;;361            
;;;362            if (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_6) == SET) {
;;;363                start[RC_CH5] = TIM_GetCapture1(TIM4);
;;;364                
;;;365                TIM_OC1PolarityConfig(TIM4,TIM_ICPolarity_Falling);
;;;366                ch_cnt[RC_CH5] = cnt;
;;;367                return;
;;;368            } else {
;;;369                end[RC_CH5] = TIM_GetCapture1(TIM4);
;;;370                       
;;;371                interval[RC_CH5] = (cnt - ch_cnt[RC_CH5]) * TIM_COUNTER + end[RC_CH5] - start[RC_CH5];
;;;372                // limit the scale within 2 secs.
;;;373                if (interval[RC_CH5] > 72000)
;;;374                    interval[RC_CH5] = 72000;
;;;375    
;;;376                TIM_OC1PolarityConfig(TIM4,TIM_ICPolarity_Rising); 
;;;377    			return;
;;;378            }
;;;379        }  
;;;380        
;;;381        // CH2 PB7 RC_CH6
;;;382        if (TIM_GetITStatus(TIM4, TIM_IT_CC2) != RESET) {  
;;;383            /* Clear TIM2_CH6 Capture compare interrupt pending bit */  
;;;384            TIM_ClearITPendingBit(TIM4, TIM_IT_CC2);  
;;;385            
;;;386            if (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_7) == SET) {
;;;387                start[RC_CH6] = TIM_GetCapture2(TIM4);
;;;388                
;;;389                TIM_OC2PolarityConfig(TIM4,TIM_ICPolarity_Falling);
;;;390                ch_cnt[RC_CH6] = cnt;
;;;391                return;
;;;392            } else {
;;;393                end[RC_CH6] = TIM_GetCapture2(TIM4);
;;;394                       
;;;395                interval[RC_CH6] = (cnt - ch_cnt[RC_CH6]) * TIM_COUNTER + end[RC_CH6] - start[RC_CH6];
;;;396                // limit the scale within 2 secs.
;;;397                if (interval[RC_CH6] > 72000)
;;;398                    interval[RC_CH6] = 72000;
;;;399    
;;;400                TIM_OC2PolarityConfig(TIM4,TIM_ICPolarity_Rising); 
;;;401    			return;
;;;402            }
;;;403        }
;;;404    
;;;405        // CH3 PB8 RC_CH7
;;;406        if (TIM_GetITStatus(TIM4, TIM_IT_CC3) != RESET) {  
;;;407            /* Clear TIM2_CH7 Capture compare interrupt pending bit */  
;;;408            TIM_ClearITPendingBit(TIM4, TIM_IT_CC3);  
;;;409            
;;;410            if (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_8) == SET) {
;;;411                start[RC_CH7] = TIM_GetCapture3(TIM4);
;;;412                
;;;413                TIM_OC3PolarityConfig(TIM4,TIM_ICPolarity_Falling);
;;;414                ch_cnt[RC_CH7] = cnt;
;;;415                return;
;;;416            } else {
;;;417                end[RC_CH7] = TIM_GetCapture3(TIM4);
;;;418                       
;;;419                interval[RC_CH7] = (cnt - ch_cnt[RC_CH7]) * TIM_COUNTER + end[RC_CH7] - start[RC_CH7];
;;;420                // limit the scale within 2 secs.
;;;421                if (interval[RC_CH7] > 72000)
;;;422                    interval[RC_CH7] = 72000;
;;;423    
;;;424                TIM_OC3PolarityConfig(TIM4,TIM_ICPolarity_Rising); 
;;;425    			return;
;;;426            }
;;;427        }
;;;428    
;;;429        // CH4 PB9 RC_CH8
;;;430        if (TIM_GetITStatus(TIM4, TIM_IT_CC4) != RESET) {  
;;;431            /* Clear TIM2_CH8 Capture compare interrupt pending bit */  
;;;432            TIM_ClearITPendingBit(TIM4, TIM_IT_CC4);  
;;;433            
;;;434            if (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_9) == SET) {
;;;435                start[RC_CH8] = TIM_GetCapture4(TIM4);
;;;436                
;;;437                TIM_OC4PolarityConfig(TIM4,TIM_ICPolarity_Falling);
;;;438                ch_cnt[RC_CH8] = cnt;
;;;439                return;
;;;440            } else {
;;;441                end[RC_CH8] = TIM_GetCapture4(TIM4);
;;;442                       
;;;443                interval[RC_CH8] = (cnt - ch_cnt[RC_CH8]) * TIM_COUNTER + end[RC_CH8] - start[RC_CH8];
;;;444                // limit the scale within 2 secs.
;;;445                if (interval[RC_CH8] > 72000)
;;;446                    interval[RC_CH8] = 72000;
;;;447    
;;;448                TIM_OC4PolarityConfig(TIM4,TIM_ICPolarity_Rising); 
;;;449    			return;
;;;450            }
;;;451        }    
;;;452    }
0005ec  bd10              POP      {r4,pc}
                  |L1.1518|
0005ee  2102              MOVS     r1,#2                 ;358
0005f0  4897              LDR      r0,|L1.2128|
0005f2  f7fffffe          BL       TIM_GetITStatus
0005f6  2800              CMP      r0,#0                 ;358
0005f8  d03a              BEQ      |L1.1648|
0005fa  2102              MOVS     r1,#2                 ;360
0005fc  4894              LDR      r0,|L1.2128|
0005fe  f7fffffe          BL       TIM_ClearITPendingBit
000602  2140              MOVS     r1,#0x40              ;362
000604  4894              LDR      r0,|L1.2136|
000606  f7fffffe          BL       GPIO_ReadInputDataBit
00060a  2801              CMP      r0,#1                 ;362
00060c  d10d              BNE      |L1.1578|
00060e  4890              LDR      r0,|L1.2128|
000610  f7fffffe          BL       TIM_GetCapture1
000614  4989              LDR      r1,|L1.2108|
000616  6108              STR      r0,[r1,#0x10]         ;363  ; start
000618  2102              MOVS     r1,#2                 ;365
00061a  488d              LDR      r0,|L1.2128|
00061c  f7fffffe          BL       TIM_OC1PolarityConfig
000620  488c              LDR      r0,|L1.2132|
000622  6800              LDR      r0,[r0,#0]            ;366  ; cnt
000624  4987              LDR      r1,|L1.2116|
000626  6108              STR      r0,[r1,#0x10]         ;366  ; ch_cnt
000628  e7e0              B        |L1.1516|
                  |L1.1578|
00062a  4889              LDR      r0,|L1.2128|
00062c  f7fffffe          BL       TIM_GetCapture1
000630  4985              LDR      r1,|L1.2120|
000632  6108              STR      r0,[r1,#0x10]         ;369  ; end
000634  4608              MOV      r0,r1                 ;371
000636  6901              LDR      r1,[r0,#0x10]         ;371  ; end
000638  4882              LDR      r0,|L1.2116|
00063a  6900              LDR      r0,[r0,#0x10]         ;371  ; ch_cnt
00063c  4a85              LDR      r2,|L1.2132|
00063e  6812              LDR      r2,[r2,#0]            ;371  ; cnt
000640  1a10              SUBS     r0,r2,r0              ;371
000642  f2404265          MOV      r2,#0x465             ;371
000646  4350              MULS     r0,r2,r0              ;371
000648  eb011040          ADD      r0,r1,r0,LSL #5       ;371
00064c  497b              LDR      r1,|L1.2108|
00064e  6909              LDR      r1,[r1,#0x10]         ;371  ; start
000650  1a40              SUBS     r0,r0,r1              ;371
000652  497e              LDR      r1,|L1.2124|
000654  6108              STR      r0,[r1,#0x10]         ;371  ; interval
000656  4608              MOV      r0,r1                 ;373
000658  6900              LDR      r0,[r0,#0x10]         ;373  ; interval
00065a  0191              LSLS     r1,r2,#6              ;373
00065c  4288              CMP      r0,r1                 ;373
00065e  d902              BLS      |L1.1638|
000660  4608              MOV      r0,r1                 ;374
000662  497a              LDR      r1,|L1.2124|
000664  6108              STR      r0,[r1,#0x10]         ;374  ; interval
                  |L1.1638|
000666  2100              MOVS     r1,#0                 ;376
000668  4879              LDR      r0,|L1.2128|
00066a  f7fffffe          BL       TIM_OC1PolarityConfig
00066e  e7bd              B        |L1.1516|
                  |L1.1648|
000670  2104              MOVS     r1,#4                 ;382
000672  4877              LDR      r0,|L1.2128|
000674  f7fffffe          BL       TIM_GetITStatus
000678  b3d0              CBZ      r0,|L1.1776|
00067a  2104              MOVS     r1,#4                 ;384
00067c  4874              LDR      r0,|L1.2128|
00067e  f7fffffe          BL       TIM_ClearITPendingBit
000682  2180              MOVS     r1,#0x80              ;386
000684  4874              LDR      r0,|L1.2136|
000686  f7fffffe          BL       GPIO_ReadInputDataBit
00068a  2801              CMP      r0,#1                 ;386
00068c  d10d              BNE      |L1.1706|
00068e  4870              LDR      r0,|L1.2128|
000690  f7fffffe          BL       TIM_GetCapture2
000694  4969              LDR      r1,|L1.2108|
000696  6148              STR      r0,[r1,#0x14]         ;387  ; start
000698  2102              MOVS     r1,#2                 ;389
00069a  486d              LDR      r0,|L1.2128|
00069c  f7fffffe          BL       TIM_OC2PolarityConfig
0006a0  486c              LDR      r0,|L1.2132|
0006a2  6800              LDR      r0,[r0,#0]            ;390  ; cnt
0006a4  4967              LDR      r1,|L1.2116|
0006a6  6148              STR      r0,[r1,#0x14]         ;390  ; ch_cnt
0006a8  e7a0              B        |L1.1516|
                  |L1.1706|
0006aa  4869              LDR      r0,|L1.2128|
0006ac  f7fffffe          BL       TIM_GetCapture2
0006b0  4965              LDR      r1,|L1.2120|
0006b2  6148              STR      r0,[r1,#0x14]         ;393  ; end
0006b4  4608              MOV      r0,r1                 ;395
0006b6  6941              LDR      r1,[r0,#0x14]         ;395  ; end
0006b8  4862              LDR      r0,|L1.2116|
0006ba  6940              LDR      r0,[r0,#0x14]         ;395  ; ch_cnt
0006bc  4a65              LDR      r2,|L1.2132|
0006be  6812              LDR      r2,[r2,#0]            ;395  ; cnt
0006c0  1a10              SUBS     r0,r2,r0              ;395
0006c2  f2404265          MOV      r2,#0x465             ;395
0006c6  4350              MULS     r0,r2,r0              ;395
0006c8  eb011040          ADD      r0,r1,r0,LSL #5       ;395
0006cc  495b              LDR      r1,|L1.2108|
0006ce  6949              LDR      r1,[r1,#0x14]         ;395  ; start
0006d0  1a40              SUBS     r0,r0,r1              ;395
0006d2  495e              LDR      r1,|L1.2124|
0006d4  6148              STR      r0,[r1,#0x14]         ;395  ; interval
0006d6  4608              MOV      r0,r1                 ;397
0006d8  6940              LDR      r0,[r0,#0x14]         ;397  ; interval
0006da  0191              LSLS     r1,r2,#6              ;397
0006dc  4288              CMP      r0,r1                 ;397
0006de  d902              BLS      |L1.1766|
0006e0  4608              MOV      r0,r1                 ;398
0006e2  495a              LDR      r1,|L1.2124|
0006e4  6148              STR      r0,[r1,#0x14]         ;398  ; interval
                  |L1.1766|
0006e6  2100              MOVS     r1,#0                 ;400
0006e8  4859              LDR      r0,|L1.2128|
0006ea  f7fffffe          BL       TIM_OC2PolarityConfig
0006ee  e77d              B        |L1.1516|
                  |L1.1776|
0006f0  e7ff              B        |L1.1778|
                  |L1.1778|
0006f2  2108              MOVS     r1,#8                 ;406
0006f4  4856              LDR      r0,|L1.2128|
0006f6  f7fffffe          BL       TIM_GetITStatus
0006fa  b3d8              CBZ      r0,|L1.1908|
0006fc  2108              MOVS     r1,#8                 ;408
0006fe  4854              LDR      r0,|L1.2128|
000700  f7fffffe          BL       TIM_ClearITPendingBit
000704  f44f7180          MOV      r1,#0x100             ;410
000708  4853              LDR      r0,|L1.2136|
00070a  f7fffffe          BL       GPIO_ReadInputDataBit
00070e  2801              CMP      r0,#1                 ;410
000710  d10d              BNE      |L1.1838|
000712  484f              LDR      r0,|L1.2128|
000714  f7fffffe          BL       TIM_GetCapture3
000718  4948              LDR      r1,|L1.2108|
00071a  6188              STR      r0,[r1,#0x18]         ;411  ; start
00071c  2102              MOVS     r1,#2                 ;413
00071e  484c              LDR      r0,|L1.2128|
000720  f7fffffe          BL       TIM_OC3PolarityConfig
000724  484b              LDR      r0,|L1.2132|
000726  6800              LDR      r0,[r0,#0]            ;414  ; cnt
000728  4946              LDR      r1,|L1.2116|
00072a  6188              STR      r0,[r1,#0x18]         ;414  ; ch_cnt
00072c  e75e              B        |L1.1516|
                  |L1.1838|
00072e  4848              LDR      r0,|L1.2128|
000730  f7fffffe          BL       TIM_GetCapture3
000734  4944              LDR      r1,|L1.2120|
000736  6188              STR      r0,[r1,#0x18]         ;417  ; end
000738  4608              MOV      r0,r1                 ;419
00073a  6981              LDR      r1,[r0,#0x18]         ;419  ; end
00073c  4841              LDR      r0,|L1.2116|
00073e  6980              LDR      r0,[r0,#0x18]         ;419  ; ch_cnt
000740  4a44              LDR      r2,|L1.2132|
000742  6812              LDR      r2,[r2,#0]            ;419  ; cnt
000744  1a10              SUBS     r0,r2,r0              ;419
000746  f2404265          MOV      r2,#0x465             ;419
00074a  4350              MULS     r0,r2,r0              ;419
00074c  eb011040          ADD      r0,r1,r0,LSL #5       ;419
000750  493a              LDR      r1,|L1.2108|
000752  6989              LDR      r1,[r1,#0x18]         ;419  ; start
000754  1a40              SUBS     r0,r0,r1              ;419
000756  493d              LDR      r1,|L1.2124|
000758  6188              STR      r0,[r1,#0x18]         ;419  ; interval
00075a  4608              MOV      r0,r1                 ;421
00075c  6980              LDR      r0,[r0,#0x18]         ;421  ; interval
00075e  0191              LSLS     r1,r2,#6              ;421
000760  4288              CMP      r0,r1                 ;421
000762  d902              BLS      |L1.1898|
000764  4608              MOV      r0,r1                 ;422
000766  4939              LDR      r1,|L1.2124|
000768  6188              STR      r0,[r1,#0x18]         ;422  ; interval
                  |L1.1898|
00076a  2100              MOVS     r1,#0                 ;424
00076c  4838              LDR      r0,|L1.2128|
00076e  f7fffffe          BL       TIM_OC3PolarityConfig
000772  e73b              B        |L1.1516|
                  |L1.1908|
000774  e7ff              B        |L1.1910|
                  |L1.1910|
000776  2110              MOVS     r1,#0x10              ;430
000778  4835              LDR      r0,|L1.2128|
00077a  f7fffffe          BL       TIM_GetITStatus
00077e  b3d8              CBZ      r0,|L1.2040|
000780  2110              MOVS     r1,#0x10              ;432
000782  4833              LDR      r0,|L1.2128|
000784  f7fffffe          BL       TIM_ClearITPendingBit
000788  f44f7100          MOV      r1,#0x200             ;434
00078c  4832              LDR      r0,|L1.2136|
00078e  f7fffffe          BL       GPIO_ReadInputDataBit
000792  2801              CMP      r0,#1                 ;434
000794  d10d              BNE      |L1.1970|
000796  482e              LDR      r0,|L1.2128|
000798  f7fffffe          BL       TIM_GetCapture4
00079c  4927              LDR      r1,|L1.2108|
00079e  61c8              STR      r0,[r1,#0x1c]         ;435  ; start
0007a0  2102              MOVS     r1,#2                 ;437
0007a2  482b              LDR      r0,|L1.2128|
0007a4  f7fffffe          BL       TIM_OC4PolarityConfig
0007a8  482a              LDR      r0,|L1.2132|
0007aa  6800              LDR      r0,[r0,#0]            ;438  ; cnt
0007ac  4925              LDR      r1,|L1.2116|
0007ae  61c8              STR      r0,[r1,#0x1c]         ;438  ; ch_cnt
0007b0  e71c              B        |L1.1516|
                  |L1.1970|
0007b2  4827              LDR      r0,|L1.2128|
0007b4  f7fffffe          BL       TIM_GetCapture4
0007b8  4923              LDR      r1,|L1.2120|
0007ba  61c8              STR      r0,[r1,#0x1c]         ;441  ; end
0007bc  4608              MOV      r0,r1                 ;443
0007be  69c1              LDR      r1,[r0,#0x1c]         ;443  ; end
0007c0  4820              LDR      r0,|L1.2116|
0007c2  69c0              LDR      r0,[r0,#0x1c]         ;443  ; ch_cnt
0007c4  4a23              LDR      r2,|L1.2132|
0007c6  6812              LDR      r2,[r2,#0]            ;443  ; cnt
0007c8  1a10              SUBS     r0,r2,r0              ;443
0007ca  f2404265          MOV      r2,#0x465             ;443
0007ce  4350              MULS     r0,r2,r0              ;443
0007d0  eb011040          ADD      r0,r1,r0,LSL #5       ;443
0007d4  4919              LDR      r1,|L1.2108|
0007d6  69c9              LDR      r1,[r1,#0x1c]         ;443  ; start
0007d8  1a40              SUBS     r0,r0,r1              ;443
0007da  491c              LDR      r1,|L1.2124|
0007dc  61c8              STR      r0,[r1,#0x1c]         ;443  ; interval
0007de  4608              MOV      r0,r1                 ;445
0007e0  69c0              LDR      r0,[r0,#0x1c]         ;445  ; interval
0007e2  0191              LSLS     r1,r2,#6              ;445
0007e4  4288              CMP      r0,r1                 ;445
0007e6  d902              BLS      |L1.2030|
0007e8  4608              MOV      r0,r1                 ;446
0007ea  4918              LDR      r1,|L1.2124|
0007ec  61c8              STR      r0,[r1,#0x1c]         ;446  ; interval
                  |L1.2030|
0007ee  2100              MOVS     r1,#0                 ;448
0007f0  4817              LDR      r0,|L1.2128|
0007f2  f7fffffe          BL       TIM_OC4PolarityConfig
0007f6  e6f9              B        |L1.1516|
                  |L1.2040|
0007f8  e7ff              B        |L1.2042|
                  |L1.2042|
0007fa  bf00              NOP      
0007fc  e6f6              B        |L1.1516|
;;;453    
                          ENDP

                  ppm_output PROC
;;;476    */
;;;477    void ppm_output(void){
0007fe  b510              PUSH     {r4,lr}
;;;478        uint32_t ch_val = 0;
000800  2400              MOVS     r4,#0
;;;479        
;;;480        /* for CH1 ~ CH8 and the last one low level interval */
;;;481        if (CH_DOWN_STATE == state) {
000802  4816              LDR      r0,|L1.2140|
000804  7800              LDRB     r0,[r0,#0]  ; state
000806  b9b0              CBNZ     r0,|L1.2102|
;;;482    		/* next systick interrupt after 0.5ms */
;;;483            systick_init(MS05);
000808  f64840a0          MOV      r0,#0x8ca0
00080c  f7fffffe          BL       systick_init
;;;484            total_value += MS05;
000810  4813              LDR      r0,|L1.2144|
000812  e9d01000          LDRD     r1,r0,[r0,#0]
000816  f64843a0          MOV      r3,#0x8ca0
00081a  18c9              ADDS     r1,r1,r3
00081c  f1400000          ADC      r0,r0,#0
000820  4a0f              LDR      r2,|L1.2144|
000822  e9c21000          STRD     r1,r0,[r2,#0]
;;;485            state = CH_UP_STATE;
000826  2001              MOVS     r0,#1
000828  490c              LDR      r1,|L1.2140|
00082a  7008              STRB     r0,[r1,#0]
;;;486            GPIO_ResetBits(GPIOB, GPIO_Pin_1);
00082c  2102              MOVS     r1,#2
00082e  480a              LDR      r0,|L1.2136|
000830  f7fffffe          BL       GPIO_ResetBits
000834  e053              B        |L1.2270|
                  |L1.2102|
000836  e015              B        |L1.2148|
                  |L1.2104|
                          DCD      0x40010800
                  |L1.2108|
                          DCD      start
                  |L1.2112|
                          DCD      ||cnt||
                  |L1.2116|
                          DCD      ch_cnt
                  |L1.2120|
                          DCD      end
                  |L1.2124|
                          DCD      interval
                  |L1.2128|
                          DCD      0x40000800
                  |L1.2132|
                          DCD      |symbol_number.19|
                  |L1.2136|
                          DCD      0x40010c00
                  |L1.2140|
                          DCD      state
                  |L1.2144|
                          DCD      total_value
                  |L1.2148|
;;;487        } else {
;;;488            /* for channedl CH1 ~ CH8 high level interval */
;;;489            if (ch_idx < RC_CH_NUM) {
000864  481e              LDR      r0,|L1.2272|
000866  7800              LDRB     r0,[r0,#0]  ; ch_idx
000868  2808              CMP      r0,#8
00086a  da25              BGE      |L1.2232|
;;;490                if (interval[ch_idx] < (MS05))
00086c  481d              LDR      r0,|L1.2276|
00086e  491c              LDR      r1,|L1.2272|
000870  7809              LDRB     r1,[r1,#0]  ; ch_idx
000872  f8500021          LDR      r0,[r0,r1,LSL #2]
000876  f64841a0          MOV      r1,#0x8ca0
00087a  4288              CMP      r0,r1
00087c  d201              BCS      |L1.2178|
;;;491                    ch_val = MS05;
00087e  460c              MOV      r4,r1
000880  e008              B        |L1.2196|
                  |L1.2178|
;;;492                else {
;;;493                    ch_val = (interval[ch_idx] << 1) - MS05;
000882  4818              LDR      r0,|L1.2276|
000884  4916              LDR      r1,|L1.2272|
000886  7809              LDRB     r1,[r1,#0]  ; ch_idx
000888  f8500021          LDR      r0,[r0,r1,LSL #2]
00088c  f64841a0          MOV      r1,#0x8ca0
000890  ebc10440          RSB      r4,r1,r0,LSL #1
                  |L1.2196|
;;;494                }
;;;495                systick_init(ch_val);
000894  4620              MOV      r0,r4
000896  f7fffffe          BL       systick_init
;;;496                total_value += ch_val;
00089a  4813              LDR      r0,|L1.2280|
00089c  e9d02000          LDRD     r2,r0,[r0,#0]
0008a0  1912              ADDS     r2,r2,r4
0008a2  f1400000          ADC      r0,r0,#0
0008a6  4910              LDR      r1,|L1.2280|
0008a8  e9c12000          STRD     r2,r0,[r1,#0]
;;;497                ch_idx++;
0008ac  480c              LDR      r0,|L1.2272|
0008ae  7800              LDRB     r0,[r0,#0]  ; ch_idx
0008b0  1c40              ADDS     r0,r0,#1
0008b2  490b              LDR      r1,|L1.2272|
0008b4  7008              STRB     r0,[r1,#0]
0008b6  e00b              B        |L1.2256|
                  |L1.2232|
;;;498            } else {
;;;499                /* the last long high level interval */
;;;500                systick_init(MS20 - total_value);
0008b8  490b              LDR      r1,|L1.2280|
0008ba  6809              LDR      r1,[r1,#0]  ; total_value
0008bc  4a0b              LDR      r2,|L1.2284|
0008be  1a50              SUBS     r0,r2,r1
0008c0  f7fffffe          BL       systick_init
;;;501                total_value = 0;
0008c4  2000              MOVS     r0,#0
0008c6  4a08              LDR      r2,|L1.2280|
0008c8  6010              STR      r0,[r2,#0]  ; total_value
0008ca  6050              STR      r0,[r2,#4]  ; total_value
;;;502                ch_idx = 0;
0008cc  4904              LDR      r1,|L1.2272|
0008ce  7008              STRB     r0,[r1,#0]
                  |L1.2256|
;;;503            }
;;;504            state = CH_DOWN_STATE;
0008d0  2000              MOVS     r0,#0
0008d2  4907              LDR      r1,|L1.2288|
0008d4  7008              STRB     r0,[r1,#0]
;;;505            GPIO_SetBits(GPIOB, GPIO_Pin_1);
0008d6  2102              MOVS     r1,#2
0008d8  4806              LDR      r0,|L1.2292|
0008da  f7fffffe          BL       GPIO_SetBits
                  |L1.2270|
;;;506        }     
;;;507    }
0008de  bd10              POP      {r4,pc}
;;;508    
                          ENDP

                  |L1.2272|
                          DCD      ch_idx
                  |L1.2276|
                          DCD      interval
                  |L1.2280|
                          DCD      total_value
                  |L1.2284|
                          DCD      0x0015f900
                  |L1.2288|
                          DCD      state
                  |L1.2292|
                          DCD      0x40010c00

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  start
                          %        32
                  end
                          %        32
                  interval
                          %        32
                  ch_cnt
                          %        32

                          AREA ||.data||, DATA, ALIGN=3

                  state
000000  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
                  total_value
000008  00000000          DCQ      0x0000000000000000
00000c  00000000
                  ch_idx
000010  00000000          DCB      0x00,0x00,0x00,0x00
                  ||cnt||
                          DCD      0x00000000
                  |symbol_number.19|
                          DCD      0x00000000
